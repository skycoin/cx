package main

import "gl"
import "glfw"
import "os"

var width i32 = 400
var height i32 = 300

var frame f64
var texture []i32

func cube () {
	gl.BindTexture(gl.TEXTURE_2D, texture[f64.i32(frame)])
	gl.Scalef(0.25, 0.5, 0.0)
	gl.Begin(gl.QUADS)
	gl.TexCoord2d(0.0D, 0.0D); 
	gl.Vertex3f(-1.0, 1.0, 0.0);
	gl.TexCoord2d(1.0D, 0.0D); 
	gl.Vertex3f(1.0, 1.0, 0.0);
	gl.TexCoord2d(1.0D, 1.0D); 
	gl.Vertex3f(1.0, -1.0, 0.0);
	gl.TexCoord2d(0.0D, 1.0D);
	gl.Vertex3f(-1.0, -1.0, 0.0);
	gl.End();
}

func display () {
	gl.ClearColor(0.0, 0.0, 0.0, 1.0)
	gl.Clear(gl.COLOR_BUFFER_BIT)

	gl.LoadIdentity()
	gl.Enable(gl.TEXTURE_2D)
	gl.Translatef(0.0, 0.0, 0.0)
	cube()
	glfw.PollEvents()
	glfw.SwapBuffers("window")
	frame = f64.add(frame, 0.1D)
	if f64.gt(frame, 2.0D) {
		frame = 0.0D
	}
}

func init () () {
	var wd str
	wd = os.GetWorkingDirectory()
	texture = append(texture, gl.NewTexture(str.concat(wd, "textures/adventurer_walk1.png")))
	texture = append(texture, gl.NewTexture(str.concat(wd, "textures/adventurer_walk2.png")))
}

func main () () {
	glfw.Init()
	glfw.WindowHint(glfw.Resizable, glfw.False)
	glfw.WindowHint(glfw.ContextVersionMajor, 2)
	glfw.WindowHint(glfw.ContextVersionMinor, 1)

	glfw.CreateWindow("window", width, height, "Texture Animation")
	glfw.MakeContextCurrent("window")
	
	gl.Init()
	var program i32
	program = gl.CreateProgram()
	gl.LinkProgram(program)

	init()
	
	for bool.not(glfw.ShouldClose("window")) {
		// gl.Clear(i32.bitor(gl.COLOR_BUFFER_BIT, gl.DEPTH_BUFFER_BIT))
		gl.UseProgram(program)

		display()
		
		// glfw.PollEvents()
		// glfw.SwapBuffers("window")
	}
}
