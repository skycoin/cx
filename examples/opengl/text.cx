package main

import "gl"
import "glfw"
import "gltext"
import "os"

var width i32 = 800
var height i32 = 600

func main () {
	glfw.Init()

	glfw.CreateWindow("window", width, height, "Displaying Text")
	glfw.MakeContextCurrent("window")
	
	gl.Init()
	var program i32
	program = gl.CreateProgram()
	gl.LinkProgram(program)

	var wd str
	wd = os.GetWorkingDirectory()
	fontFile := str.concat(wd, "fonts/roboto-light.ttf")

	var handle i32
	var closeHandle bool
	handle = os.Open(fontFile)
	gltext.LoadTrueType(handle, "Roboto100", 100, 55, 127, gltext.LeftToRight)
	closeHandle = os.Close(handle)
	
	handle = os.Open(fontFile)
	gltext.LoadTrueType(handle, "Roboto30", 30, 32, 127, gltext.LeftToRight)
	closeHandle = os.Close(handle)

	gl.Enable(gl.DEPTH_TEST)
	gl.DepthFunc(gl.LESS)
	
	gl.ClearColor(0.1, 0.1, 0.1, 0.0)

	var width1 i32
	var height1 i32 
	var width2 i32
	var height2 i32
	
	width1, height1 = gltext.Metrics("Roboto100", "Hello World")
	printf("`Hello World` metrics\nWidth: %d\nHeight: %d\n", width1, height1)

	width2, height2 = gltext.Metrics("Roboto30", "I'm some text")
	printf("`I'm some text` metrics\nWidth: %d\nHeight: %d\n", width2, height2)

	for bool.not(glfw.ShouldClose("window")) {
		gl.Clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)

		gl.Color4f(0.5, 0.3, 0.8, 1.0)
		gltext.Printf("Roboto100", 0.0, 0.0, "Hello World")
		gl.Color4f(0.5, 0.7, 0.5, 1.0)

		gltext.Printf("Roboto30", 200.0, 400.0, "I'm some text")

		glfw.PollEvents()
		glfw.SwapBuffers("window")
	}
}
